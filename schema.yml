openapi: 3.0.3
info:
  title: Visitors Book API
  version: 1.0.0
  description: "Aim of this task is to create `restaurant visit diary`.\n    Our users\
    \ like travel and they would like to write down their own reviews restaurants\n\
    \    they have visited to know where to go next / to whom to recommend.\n    It\
    \ is therefore necessary to record the Restaurant and the Visit. At the Restaurant\n\
    \    it is necessary to know the name, place, type (type of cuisine). The visit\
    \ should records\n    the date of the visit, the expense, a note (where the user\
    \ can write down what he / she has\n    given and other findings) and an evaluation\
    \ (values ranging from 1 to 5).\n    "
paths:
  /api/account/register/:
    post:
      operationId: account_register_create
      description: Enable register user with username, email and password
      tags:
      - account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/aggregated/:
    get:
      operationId: aggregated_list
      description: This viewset opens summary endpoints for listing and detail view
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - aggregated
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRestaurantAggregatedList'
          description: ''
  /api/aggregated/{id}/:
    get:
      operationId: aggregated_retrieve
      description: This viewset opens summary endpoints for listing and detail view
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - aggregated
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestaurantAggregated'
          description: ''
  /api/restaurants/:
    get:
      operationId: restaurants_list
      description: This viewset opens endpoints for restaurant creation and updating
      parameters:
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - restaurants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRestaurantList'
          description: ''
    post:
      operationId: restaurants_create
      description: This viewset opens endpoints for restaurant creation and updating
      tags:
      - restaurants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
  /api/restaurants/{id}/:
    get:
      operationId: restaurants_retrieve
      description: This viewset opens endpoints for restaurant creation and updating
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    put:
      operationId: restaurants_update
      description: This viewset opens endpoints for restaurant creation and updating
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Restaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    patch:
      operationId: restaurants_partial_update
      description: This viewset opens endpoints for restaurant creation and updating
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurants
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRestaurant'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Restaurant'
          description: ''
    delete:
      operationId: restaurants_destroy
      description: This viewset opens endpoints for restaurant creation and updating
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this restaurant.
        required: true
      tags:
      - restaurants
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/visits/:
    post:
      operationId: visits_create
      description: It opens endpoint for creating visit only for restaurant creators
      tags:
      - visits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Visit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Visit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Visit'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Visit'
          description: ''
components:
  schemas:
    EvaluationEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
    PaginatedRestaurantAggregatedList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RestaurantAggregated'
    PaginatedRestaurantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Restaurant'
    PatchedRestaurant:
      type: object
      description: Restaurant serializer excluding a creator from writing
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        place:
          type: string
          maxLength: 80
        type:
          $ref: '#/components/schemas/TypeEnum'
        creator:
          type: integer
          readOnly: true
    Restaurant:
      type: object
      description: Restaurant serializer excluding a creator from writing
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 80
        place:
          type: string
          maxLength: 80
        type:
          $ref: '#/components/schemas/TypeEnum'
        creator:
          type: integer
          readOnly: true
      required:
      - creator
      - id
      - name
      - place
    RestaurantAggregated:
      type: object
      description: Serializer aggregating visits for summary view
      properties:
        id:
          type: integer
          readOnly: true
        aggregates:
          type: object
          additionalProperties:
            type: number
            format: float
          readOnly: true
        name:
          type: string
          maxLength: 80
        place:
          type: string
          maxLength: 80
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - aggregates
      - id
      - name
      - place
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TypeEnum:
      enum:
      - CZ
      - DE
      - FR
      - GE
      - HT
      type: string
    User:
      type: object
      description: Serializer for customized User to login with email and password
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - id
      - password
      - username
    Visit:
      type: object
      description: Visit serializer excluding a date of creation from writing
      properties:
        id:
          type: integer
          readOnly: true
        date:
          type: string
          format: date
          readOnly: true
        expense:
          type: string
          format: decimal
          pattern: ^\d{0,8}(?:\.\d{0,2})?$
        note:
          type: string
        evaluation:
          allOf:
          - $ref: '#/components/schemas/EvaluationEnum'
          minimum: -32768
          maximum: 32767
        restaurant:
          type: integer
      required:
      - date
      - expense
      - id
      - note
      - restaurant
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
